{"version":3,"sources":["Components/Viewer/RLottie.js"],"names":["RLottie","React","Component","componentDidMount","this","props","options","eventListeners","loop","autoplay","animationData","stringData","queueLength","container","el","Boolean","window","loadAnimation","anim","hasFirstFrame","forEach","eventName","callback","registerEvents","componentDidUpdate","prevProps","prevState","snapshot","prevOptions","prevEventListeners","fileId","unregisterEvents","destroy","url","componentWillUnmount","blob","play","playSegments","segments","forceFlag","isPaused","pause","addEventListener","removeEventListener","render","width","height","ariaRole","ariaLabel","title","onClick","onMouseEnter","onMouseOut","style","lottieStyles","overflow","outline","role","aria-label","tabIndex","ref","c","className"],"mappings":"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","file":"static/js/0.b46b3fac.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './RLottie.css';\n\nclass RLottie extends React.Component {\n    componentDidMount() {\n        const { options, eventListeners } = this.props;\n\n        const {\n            loop,\n            autoplay,\n            animationData,\n            stringData,\n            queueLength\n        } = options;\n\n        this.options = {\n            container: this.el,\n            loop: Boolean(loop),\n            autoplay: Boolean(autoplay),\n            animationData,\n            stringData,\n            queueLength\n        };\n\n        this.options = { ...this.options, ...options };\n        window.RLottie.loadAnimation(this.options, anim => {\n            this.anim = anim;\n\n            if (window.RLottie.hasFirstFrame(this.anim)) {\n                if (!eventListeners) return;\n\n                eventListeners.forEach(({ eventName, callback }) => {\n                    if (eventName === 'firstFrame') {\n                        callback && callback();\n                    }\n                });\n            }\n        });\n        this.registerEvents(eventListeners);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { options, eventListeners } = this.props;\n        const { options: prevOptions, eventListeners: prevEventListeners } = prevProps\n\n        // const data = options.animationData;\n        // const prevData = prevOptions.animationData;\n        // const fileId = options.fileId;\n        // const prevFileId = prevOptions.fileId;\n        if (options.animationData !== prevOptions.animationData || options.fileId !== prevOptions.fileId) {\n            // console.log('[RLottie] update', [fileId, data], [prevFileId, prevData], [options.animationData !== prevOptions.animationData, options.fileId !== prevOptions.fileId])\n            this.unregisterEvents(prevEventListeners);\n            this.destroy();\n\n            this.options = { ...this.options, ...options };\n            // console.log('[RLottie] update loadAnimation start', [fileId, data]);\n            const url = this.props.options.url;\n            window.RLottie.loadAnimation(this.options, anim => {\n                this.anim = anim;\n                // console.log('[RLottie] update loadAnimation stop', anim, [fileId, data]);\n                // if (this.props.options.url === url) {\n                //     this.anim = anim;\n                // } else {\n                //     window.RLottie.destroy(anim);\n                // }\n                if (!eventListeners) return;\n\n                eventListeners.forEach(({ eventName, callback }) => {\n                    if (eventName === 'firstFrame') {\n                        callback && callback();\n                    }\n                });\n            });\n            this.registerEvents(eventListeners);\n        }\n    }\n\n    componentWillUnmount() {\n        this.unregisterEvents(this.props.eventListeners);\n        this.destroy();\n        this.options.blob = null;\n        this.options.container = null;\n        this.options = null;\n        this.anim = null;\n    }\n\n    play() {\n        // console.log('[Rlottie] play');\n        window.RLottie.play(this.anim);\n        // this.anim.play();\n    }\n\n    playSegments(segments, forceFlag) {\n        window.RLottie.playSegments(this.anim, segments, forceFlag);\n        // this.anim.playSegments(segments, forceFlag);\n    }\n\n    get isPaused() {\n        if (!this.anim) {\n            return false;\n        }\n\n        return window.RLottie.isPaused(this.anim);\n    }\n\n    pause() {\n        if (!window.RLottie.isPaused(this.anim)) {\n            window.RLottie.pause(this.anim);\n            return true;\n        }\n\n        return false;\n    }\n\n    destroy() {\n        // console.log('[RLottie] destroy', this.anim);\n        if (!this.anim) return;\n\n        window.RLottie.destroy(this.anim);\n        // this.anim.destroy();\n    }\n\n    registerEvents(eventListeners) {\n        // console.log('[Rlottie] registerEvents', [this.anim, eventListeners]);\n\n        if (!this.anim) return;\n\n        if (!eventListeners) return;\n\n        eventListeners.forEach(({ eventName, callback }) => {\n            window.RLottie.addEventListener(this.anim, eventName, callback);\n        });\n    }\n\n    unregisterEvents(eventListeners) {\n        if (!this.anim) return;\n\n        if (!eventListeners) return;\n\n        eventListeners.forEach(({ eventName, callback }) => {\n            window.RLottie.removeEventListener(this.anim, eventName, callback);\n        });\n    }\n\n    render() {\n        const {\n            width,\n            height,\n            ariaRole,\n            ariaLabel,\n            title,\n            onClick,\n            onMouseEnter,\n            onMouseOut,\n            style\n        } = this.props;\n\n        const lottieStyles = {\n            width: width || '100%',\n            height: height || '100%',\n            overflow: 'hidden',\n            // margin: '0 auto',\n            outline: 'none',\n            ...style\n        };\n\n        return (\n            <div\n                style={lottieStyles}\n                title={title}\n                role={ariaRole}\n                aria-label={ariaLabel}\n                tabIndex='0'\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseOut={onMouseOut}\n            >\n                <picture\n                    ref={c => this.el = c}\n                    className='dev_page_tgsticker tl_main_card_animated js-tgsticker_image'>\n                </picture>\n            </div>\n        );\n    }\n}\n\nRLottie.propTypes = {\n    width: PropTypes.number,\n    height: PropTypes.number,\n    options: PropTypes.object\n};\n\nexport default RLottie;"],"sourceRoot":""}